name: AKS Deployment
on:
  repository_dispatch:
    types: aks-build-api-trigger

jobs:
  testing_actions:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: AKS Deployment Script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az account show
            echo "this is a line" > /tmp/kubeconfig

      - name: Post Deployment Tasks
        env:
          MONGO_USER: ${{ secrets.MONGO_USER }}
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          JENKINS_URL: ${{ secrets.JENKINS_URL }}
          JENKINS_USER: ${{ secrets.JENKINS_USER }}
          KUBECONFIG: '/tmp/kubeconfig'
          KUBECONFIG_TEXT: $(cat /tmp/kubeconfig)

        run: |
            echo "this is a line" > /tmp/kubeconfig
            export PYTHONPATH=$PYTHONPATH:.
            pip3 install -r requirements.txt
            python3 deployment_utils/kubernetes_post_deployment.py --cluster_type aks --project_id trolley --cluster_name ${{ github.event.client_payload.cluster_name }} --user_name pavelzagalsky --resource_group myResourceGroup --helm_installs  ${{ github.event.client_payload.helm_installs }} --expiration_time ${{ github.event.client_payload.expiration_time }}

#      - name: Deleting Cluster
#        if: always()
#        run: |
#          az aks delete --name=${{ github.event.client_payload.cluster_name }} --resource-group=MyResourceGroup --yes