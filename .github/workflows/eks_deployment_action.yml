name: EKS Deployment
on:
  repository_dispatch:
    types: eks-build-api-trigger

jobs:
  trigger_eks_build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Generate UUID
        run: |
          uuidgen > uuid
          ls -la
          pwd
          echo "uuid=$(cat uuid)" >> $GITHUB_ENV
      - name: Echo the values
        run: |
          echo "${{ env.uuid }}"
          echo "${{ github.event.client_payload.cluster_name }}"
          echo "${{ github.event.client_payload.cluster_version }}"
          echo "${{ github.event.client_payload.region_name }}"
          echo "${{ github.event.client_payload.zone_names }}"
          echo "${{ github.event.client_payload.num_nodes }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Trigger EKS Build
        run: |
          aws sts get-caller-identity
          brew install eksctl
          eksctl create cluster --region=${{ github.event.client_payload.region_name }} --zones=${{ github.event.client_payload.zone_names }} --name ${{ github.event.client_payload.cluster_name }} --version ${{ github.event.client_payload.cluster_version }} --nodes ${{ github.event.client_payload.num_nodes }}
          aws eks --region ${{ github.event.client_payload.region_name }} update-kubeconfig --name ${{ github.event.client_payload.cluster_name }}
          cat /home/runner/.kube/config
      - name: Post Deployment Tasks
        env:
          MONGO_USER: ${{ secrets.MONGO_USER }}
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          JENKINS_URL: ${{ secrets.JENKINS_URL }}
          JENKINS_USER: ${{ secrets.JENKINS_USER }}

        run: |
          export PYTHONPATH=$PYTHONPATH:.
          pip3 install -r requirements.txt
          python3 deployment_utils/kubernetes_post_deployment.py --cluster_type eks --project_id trolley --cluster_name ${{ github.event.client_payload.cluster_name }} --user_name pavelzagalsky --zone_name ${{ github.event.client_payload.zone_names }} --helm_installs  ${{ github.event.client_payload.helm_installs }} --expiration_time 1

      - name: Deleting Cluster
        if: always()
        run: |
          eksctl delete cluster --region=--zone ${{ github.event.client_payload.zone_name }} --name=${{ github.event.client_payload.cluster_name }}